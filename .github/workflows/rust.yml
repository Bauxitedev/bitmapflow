name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  GODOT_VERSION: 3.2.3
  EXPORT_NAME: bitmapflow
  
defaults:
  run:
    working-directory: rust

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Apt-get update
      run: sudo apt-get update
      
    - name: Install dependencies
      run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y clang libclang-dev libopencv-contrib4.2 libopencv-dev curl 
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
            toolchain: nightly
            components: clippy
            override: true
      
    - name: Build
      run: cargo build --release --verbose
      
    - name: Clippy
      uses: actions-rs/clippy-check@v1.0.7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        toolchain: nightly 
        args: --all-features --manifest-path rust/Cargo.toml
        # see https://github.com/actions-rs/clippy-check/issues/28
        
    - name: Upload bitmapflow-linux-so
      uses: actions/upload-artifact@v2
      with:
          name: bitmapflow-linux-so
          if-no-files-found: error
          path: rust/target/release/libbitmapflow_rust.so
        
  markdown-link-check:

    runs-on: ubuntu-latest

    steps:

        - name: markdown-link-check
          uses: gaurav-nelson/github-action-markdown-link-check@1.0.12
          with:
            folder-path: .
            config-file: .github/workflows/markdown-link-check-config.json


 # See https://github.com/aBARICHELLO/godot-ci/blob/master/.github/workflows/godot-ci.yml
  export-linux:
    needs: build
    runs-on: ubuntu-latest
    container:
        image: barichello/godot-ci:3.2.3
        
    steps:
    
      - name: Download bitmapflow-linux-so
        uses: actions/download-artifact@v2
        with: 
            name:  bitmapflow-linux-so
            
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
          
      - name: Debug godot export templates
        run: |
          apt-get update
          apt install tree
          tree ~/.local/share/godot/
          
      - name: Linux Build
        working-directory: godot # TODO the build/linux folder should be in the default directory, not in "godot"
        run: |
          mkdir -v -p build/linux
          godot -v --export "Linux/X11" build/linux/$EXPORT_NAME.x86_64
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: godot/build/linux


            
